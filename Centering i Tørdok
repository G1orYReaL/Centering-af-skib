#include <AccelStepper.h>
const int TrigPin1 = 53; //Erklære TrigPin for sensor 1
const int EchoPin1 = 52; //Erklære EchoPin for sensor 1

const int TrigPin2 = 51; //Erklære TrigPin for sensor 2
const int EchoPin2 = 50; //Erklære EchoPin for sensor 2

const int TrigPin3 = 45; //Erklære TrigPin for sensor 3
const int EchoPin3 = 44; //Erklære EchoPin for sensor 3

const int TrigPin4 = 47; //Erklære TrigPin for sensor 4
const int EchoPin4 = 46; //Erklære EchoPin for sensor 4

const int TrigPin5 = 49; //Erklære TrigPin for sensor 5
const int EchoPin5 = 48; //Erklære EchoPin for sensor 5

double Tid1; //Erklære Tid til Sensor 1
double Tid2; //Erklære Tid til Sensor 2
double Tid3; //Erklære Tid til Sensor 3
double Tid4; //Erklære Tid til Sensor 4
double Tid5; //Erklære Tid til Sensor 5

double Afstand1; //Erklære Afstand for sensor 1
double Afstand2; //Erklære Afstand for sensor 2
double Afstand3; //Erklære Afstand for sensor 3
double Afstand4; //Erklære Afstand for sensor 4
double Afstand5; //Erklære Afstand for sensor 5

int T = 0; //Erklære int T til at være 0
int B = 0; //Erklære int B til at være 0
int C = 0; //Erklære int C til at være 0
int E = 0; //Erklære int E til at være 0
int S = 0; //Erklære int S til at være 0

unsigned long startMillis; //Erklære long StartMillis
unsigned long currentMillis; //Erklære long current Millis
const unsigned long period = 240000; //Erklære long period til være 240 sekunder eller 4 minutter

char character; //Erklære char character
String start = ""; //Erklære string start til at være tom
String startCheck = ("Start"); //Erklære string startCheck til at være Start

AccelStepper stepper1(AccelStepper::DRIVER, 22, 23); //Erklære StepPin og DirPin for motor 1
AccelStepper stepper2(AccelStepper::DRIVER, 24, 25); //Erklære StepPin og DirPin for motor 2
AccelStepper stepper3(AccelStepper::DRIVER, 26, 27); //Erklære StepPin og DirPin for motor 3
AccelStepper stepper4(AccelStepper::DRIVER, 28, 29); //Erklære StepPin og DirPin for motor 4

int pos1 = 3600; //Erklære int pos1 til at være 3600
int pos2 = 3600; //Erklære int pos2 til at være 3600
int pos3 = 3600; //Erklære int pos3 til at være 3600
int pos4 = 3600; //Erklære int pos4 til at være 3600

void afstand(int x) {

  if (x == 1) { //Køre hvis x er 1
    digitalWrite(TrigPin1, LOW); //Sætter TrigPin1 low
    delayMicroseconds(2);
    digitalWrite(TrigPin1, HIGH); //Sætter TrigPin1 high
    delayMicroseconds(10);
    digitalWrite(TrigPin1, LOW); //Sætter TrigPin1 low

    Tid1 = pulseIn(EchoPin1, HIGH); //Sætter Tid1 til at være den tid som EchoPin1 er High i

    Afstand1 = Tid1 * 0.034342 / 2; //Afstand1 bliver beregnet ud fra Tid1 ganget med lydenshastighed dividet med 2

    if (retAfstand(Afstand1) > 25) { //Hvis den målet afstand fra sensor 1 er større end 25 cm
      Serial.print("Afstand1: ");
      Serial.println("Fejl");
    }
    else {
      Serial.print("Afstand1: ");
      Serial.println(retAfstand(Afstand1)); //Udskriver den rettet måle afstand fra sensor 1
    }

  }
  else if (x == 2) { //Køre hvis x er 2
    digitalWrite(TrigPin2, LOW); //Sætter TrigPin2 low
    delayMicroseconds(2);
    digitalWrite(TrigPin2, HIGH); //Sætter TrigPin2 High
    delayMicroseconds(10);
    digitalWrite(TrigPin2, LOW); //Sætter TrigPin2 low

    Tid2 = pulseIn(EchoPin2, HIGH); //Sætter Tid2 til at være den tid som EchoPin2 er High i

    Afstand2 = Tid2 * 0.034342 / 2; //Afstand2 bliver beregnet ud fra Tid2 ganget med lydenshastighed dividet med 2

    if (retAfstand(Afstand2) > 25) { //Hvis den målet afstand fra sensor 2 er større end 25 cm
      Serial.print("Afstand2: ");
      Serial.println("Fejl");
    }
    else {
      Serial.print("Afstand2: ");
      Serial.println(retAfstand(Afstand2)); //Udskriver den rettet måle afstand fra sensor 2
    }
  }
  else if (x == 3) { //Køre hvis x er 3
    digitalWrite(TrigPin3, LOW); //Sætter TrigPin3 low
    delayMicroseconds(2);
    digitalWrite(TrigPin3, HIGH); //Sætter TrigPin3 High 
    delayMicroseconds(10);
    digitalWrite(TrigPin3, LOW); //Sætter TrigPin3 low

    Tid3 = pulseIn(EchoPin3, HIGH); //Sætter Tid3 til at være den tid som EchoPin3 er High i 

    Afstand3 = Tid3 * 0.034342 / 2; //Afstand3 bliver beregnet ud fra Tid3 ganget med lydenshastighed dividet med 2

    if (retAfstand(Afstand3) > 25) { //Hvis den målet afstand fra sensor 3 er større end 25 cm
      Serial.print("Afstand3: ");
      Serial.println("Fejl");
    }    
    else {
      Serial.print("Afstand3: ");
      Serial.println(retAfstand(Afstand3)); //Udskriver den rettet måle afstand fra sensor 3
    }
  }
  else if (x == 4) { //Køre hvis x er 4
    digitalWrite(TrigPin4, LOW); //Sætter TrigPin4 low
    delayMicroseconds(2);
    digitalWrite(TrigPin4, HIGH); //Sætter TrigPin4 High
    delayMicroseconds(10);
    digitalWrite(TrigPin4, LOW); //Sætter TrigPin4 low

    Tid4 = pulseIn(EchoPin4, HIGH); //Sætter Tid4 til at være den tid som EchoPin4 er High i    

    Afstand4 = Tid4 * 0.034342 / 2; //Afstand4 bliver beregnet ud fra Tid4 ganget med lydenshastighed og dividet med 2

    if ( retAfstand(Afstand4) > 25) { //Hvis den målet afstand fra sensor 4 er større end 25 cm
      Serial.print("Afstand4: ");
      Serial.println("Fejl");
    }
    else {
      Serial.print("Afstand4: ");
      Serial.println(retAfstand(Afstand4)); //Udskriver den rettet måle afstand fra sensor 4
    }
  }
  else if (x == 5) { //Køre hvis x er 5
    digitalWrite(TrigPin5, LOW); //Sætter TrigPin5 low
    delayMicroseconds(2);
    digitalWrite(TrigPin5, HIGH); //Sætter TrigPin5 High
    delayMicroseconds(10);
    digitalWrite(TrigPin5, LOW); //Sætter TrigPin5 low

    Tid5 = pulseIn(EchoPin5, HIGH); //Sætter Tid5 til at være den tid som EchoPin5 er High i  

    Afstand5 = Tid5 * 0.034342 / 2; //Afstand5 bliver beregnet ud fra Tid5 ganget med lydenshastighed og dividet med 2

    if (retAfstand(Afstand5) > 40) { //Hvis den målet afstand fra sensor 5 er større end 40 cm
      Serial.print("Afstand5: ");
      Serial.println("Fejl");
    }
    else {
      Serial.print("Afstand5: ");
      Serial.println(retAfstand(Afstand5)); //Udskriver den rettet måle afstand fra sensor 5
    }
  }
}

void motor(int x) {

  if (x == 1) { //Kører hvis X er 1
    if (stepper1.distanceToGo() == 0)
    {
      pos1 = pos1;
      stepper1.moveTo(pos1);
    }
    stepper1.setSpeed(pos1);
    stepper1.runSpeed();
  }

  else if (x == 2) { //Kører hvis X er 2
    if (stepper2.distanceToGo() == 0)
    {
      pos2 = pos2;
      stepper2.moveTo(pos2);
    }
    stepper2.setSpeed(pos2);
    stepper2.runSpeed();
  }
  
  else if (x == 3) { //Kører hvis X er 3
    if (stepper3.distanceToGo() == 0)
    {
      pos3 = pos3;
      stepper3.moveTo(pos3);
    }
    stepper3.setSpeed(pos3);
    stepper3.runSpeed();
  }
  
  else if (x == 4) { //Kører hvis X er 4
    if (stepper4.distanceToGo() == 0)
    {
      pos4 = pos4; 
      stepper4.moveTo(pos4);
    }
    stepper4.setSpeed(pos4);
    stepper4.runSpeed();
  }

}

double retAfstand(double x) { // Funktion som retter afstand ud fra hvilken sensor som kaldes
  double ret = 1.0261 * x - 0.3413; // Retter den målet afstand ud fra tendenslinje
  return ret; //returnere den rettet afstand
}

void topSet() {
  afstand(1); // kalder funktion afstand fra sensor 1
  afstand(2); // kalder funktion afstand fra sensor 2
  if (retAfstand(Afstand1) < retAfstand(Afstand2) + 0.30) { //Hvis Afstand1 er større end Afstand2
    motor(1); // spil1 kører med Uret

    stepper2.setSpeed(-pos2); // Sætter spil2 til at køre mod uret
    stepper2.runSpeed(); // Spil2 kører den sat speed

    Serial.println(" ");
    Serial.println("Afstand2 er større");
    Serial.println(" ");
  }
  else if (retAfstand(Afstand2) < retAfstand(Afstand1) + 0.30) { //Hvis Afstand2 er større end Afstand1
    motor(2); // Spil2 kører med Uret

    stepper1.setSpeed(-pos1); // Sætter spil1 til at køre mod uret
    stepper1.runSpeed(); // Spil1 kører den sat speed

    Serial.println(" ");
    Serial.println("Afstand1 er større");
    Serial.println(" ");
  }
}
void bundSet() {
  afstand(3); // kalder funktion afstand fra sensor 3
  afstand(4); // kalder funktion afstand fra sensor 4
  if (retAfstand(Afstand3) < retAfstand(Afstand4) + 0.30) { //Hvis Afstand3 er større end Afstand4
    motor(3); // spil3 kører med Uret

    stepper4.setSpeed(-pos4); // Sætter spil4 til at køre mod uret
    stepper4.runSpeed(); // spil4 kører den sat speed

    Serial.println(" ");
    Serial.println("Afstand3 er større");
    Serial.println(" ");
  }
  else if (retAfstand(Afstand4) < retAfstand(Afstand3) + 0.30) { //Hvis Afstand4 er større end Afstand3
    motor(4); // Spil4 kører med Uret

    stepper3.setSpeed(-pos3); // Sætter spil3 til at køre mod uret
    stepper3.runSpeed(); // spil3 kører den sat speed

    Serial.println(" ");
    Serial.println("Afstand4 er større");
    Serial.println(" ");
  }
}
void centerSen() {

  if (retAfstand(Afstand1) - retAfstand(Afstand2) < 0.30 && retAfstand(Afstand1) - retAfstand(Afstand2) > -0.30) { //Hvis de er inde for 0,50 cm af hinanden {

    stepper1.setSpeed(0); // Sætter spil1 til at stoppe
    stepper1.runSpeed(); // Spil1 kører den sat speed

    stepper2.setSpeed(0); // Sætter spil2 til at stoppe
    stepper2.runSpeed(); // Spil2 kører den sat speed
    T = 1; //Sætter T til 1
    Serial.println(" ");
    Serial.println("1 og 2 Lige store");
    Serial.println(" ");
  }

  else if (retAfstand(Afstand3) - retAfstand(Afstand4) < 0.30 && retAfstand(Afstand3) - retAfstand(Afstand4) > -0.30) {

    stepper3.setSpeed(0); // Sætter spil3 til at stoppe
    stepper3.runSpeed(); // Spil3 kører den sat speed

    stepper4.setSpeed(0); // Sætter spil4 til at stoppe
    stepper4.runSpeed(); // Spil4 kører den sat speed
    B = 1; //Sætter B til 1
    Serial.println(" ");
    Serial.println("3 og 4 Lige store");
    Serial.println(" ");
  }
}

void fremSen() {
  afstand(5); // kalder funktion afstand fra sensor 5
  if (retAfstand(Afstand5) <= 4.45) { // Hvis afstanden fra sensor 5 er tætter end 4.45 cm

    motor(1); // Spil1 kører med Uret

    motor(2); // Spil2 kører med Uret

    stepper3.setSpeed(-pos3); // Sætter spil4 til at køre mod uret
    stepper3.runSpeed(); // Spil4 kører den sat speed

    stepper4.setSpeed(-pos4); // Sætter spil4 til at køre mod uret
    stepper4.runSpeed(); // Spil4 kører den sat speed

    Serial.println(" ");
    Serial.println("For taet pao");
    Serial.println(" ");
  }

  else if (retAfstand(Afstand5) >= 4.85) { // Hvis afstanden fra sensor 5 er længere væk end 4.85 cm

    stepper1.setSpeed(-pos1); // Sætter spil1 til at køre mod uret
    stepper1.runSpeed(); //Spil1 kører den sat speed

    stepper2.setSpeed(-pos2); // Sætter spil2 til at køre mod uret
    stepper2.runSpeed(); //Spil2 kører den sat speed

    motor(3); // Spil3 kører med Uret

    motor(4); // Spil4 kører med Uret
    Serial.println(" ");
    Serial.println("For lang vaek");
    Serial.println(" ");
  }
  else {
    C++; //Lægger 1 til C
    Serial.println(" ");
    Serial.println("Start tørdocking");
    Serial.println(" ");
    startMillis = millis();//Sætter startMillis til at være millis i på det tidspunkt
  }
}

void empty() {
  currentMillis = millis(); //Sætter currentMillis til at være millis i på det tidspunkt
  Serial.println(currentMillis - startMillis);
  if (currentMillis - startMillis <= period) { //Køre hvis at currentMillis - startMillis er mindre end 4 minutter
    stepper1.setSpeed(0.75); // Sætter spil1 til køre 0.75 steps i sekundet
    stepper1.runSpeed(); // Spil1 kører den sat speed

    stepper2.setSpeed(0.75); // Sætter spil2 til køre 0.75 steps i sekundet
    stepper2.runSpeed(); // Spil2 kører den sat speed

    stepper3.setSpeed(0.75); // Sætter spil3 til køre 0.75 steps i sekundet
    stepper3.runSpeed(); // Spil3 kører den sat speed

    stepper4.setSpeed(0.75); // Sætter spil4 til køre 0.75 steps i sekundet
    stepper4.runSpeed(); // Spil4 kører den sat speed
  }

  else if (currentMillis - startMillis >= period) { //Køre hvis at currentMillis - startMillis er større end 4 minutter

    stepper1.setSpeed(0); // Sætter spil1 til at stoppe
    stepper1.runSpeed(); // Spil1 kører den sat speed

    stepper2.setSpeed(0); // Sætter spil2 til at stoppe
    stepper2.runSpeed(); // Spil2 kører den sat speed

    stepper3.setSpeed(0); // Sætter spil3 til at stoppe
    stepper3.runSpeed(); // Spil3 kører den sat speed

    stepper4.setSpeed(0); // Sætter spil4 til at stoppe
    stepper4.runSpeed(); // Spil4 kører den sat speed

    Serial.println(" ");
    Serial.println("Slut tørdocking");
    Serial.println(" ");
    E++; //Lægger 1 til E
  }
}


void setup() {
  // put your setup code here, to run once:
  Serial.begin(9600);
  pinMode(TrigPin1, OUTPUT); //Erklære TrigPin1 som output
  pinMode(EchoPin1, INPUT); //Erklære EchoPin1 som input

  pinMode(TrigPin2, OUTPUT); //Erklære TrigPin2 som output
  pinMode(EchoPin2, INPUT); //Erklære EchoPin2 som input

  pinMode(TrigPin3, OUTPUT); //Erklære TrigPin3 som output
  pinMode(EchoPin3, INPUT); //Erklære EchoPin3 som input

  pinMode(TrigPin4, OUTPUT); //Erklære TrigPin4 som output
  pinMode(EchoPin4, INPUT); //Erklære EchoPin4 som input

  pinMode(TrigPin5, OUTPUT); //Erklære TrigPin5 som output
  pinMode(EchoPin5, INPUT); //Erklære EchoPin5 som input

  stepper1.setMaxSpeed(3000); //Sætter Motor1 til at have en maxspeed på 3000 step i sekundet 
  stepper1.setAcceleration(3000); //Sætter Motor1 til at have en acceleration på 3000 step i sekundet  

  stepper2.setMaxSpeed(3000); //Sætter Motor2 til at have en maxspeed på 3000 step i sekundet
  stepper2.setAcceleration(3000); //Sætter Motor2 til at have en acceleration på 3000 step i sekundet

  stepper3.setMaxSpeed(3000); //Sætter Motor3 til at have en maxspeed på 3000 step i sekundet
  stepper3.setAcceleration(3000); //Sætter Motor3 til at have en acceleration på 3000 step i sekundet

  stepper4.setMaxSpeed(3000); //Sætter Motor4 til at have en maxspeed på 3000 step i sekundet
  stepper4.setAcceleration(3000); //Sætter Motor4 til at have en acceleration på 3000 step i sekundet
}

void loop() {
  if (Serial.available() > 0) { //Hvis start er det sammme som startCheck
    character = Serial.read(); //Sætter character til at være inputtet fra monitorren 
    start.concat(character); //Sætter inputtet fra character ind i start
  }

  if (start == startCheck) { //Hvis start er det sammme som startCheck
    Serial.println("Starter om 2 sekunder");
    delay(2000); // Venter i 2 sekunder
    while (E == 0) { // kører hvis E er 0;
      while (C == 0) { // kører hvis C er 0;
        while (S < 2) { // kører hvis S er mindre end 2;
          S = T + B;
          topSet(); // kalder funktion topSet();
          bundSet(); // kalder funktion bundSet();
          centerSen(); // kalder funktion centerSen();
          Serial.println(" ");
          Serial.println("Centering");          
          delay(25);
        }
        fremSen(); // kalder funktion fremSen();
        Serial.println(" ");
        Serial.println("Frem eller Tilbage");
        delay(25);
      }
      empty(); // kalder funktion empty();
      Serial.println(" ");
      Serial.println("Tømmer");
      delay(25);
    }
  }
}
